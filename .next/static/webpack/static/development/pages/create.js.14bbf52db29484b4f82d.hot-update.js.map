{"version":3,"file":"static/webpack/static/development/pages/create.js.14bbf52db29484b4f82d.hot-update.js","sources":["webpack:///./pages/create.js"],"sourcesContent":["import { Component } from 'react';\nimport Layout from '../components/layout';\n\nconst baseUrl ='http://localhost:5000?';\n\nclass CreateMadLib extends Component {\n        state = {\n                madLibContent: '',\n                madLibName: '',\n                showMadLib: false,\n                madLibList: []\n        };\n\n\n        saveMadLib = (event) => {\n                event.preventDefault();\n               \n                var url = baseUrl + 'name=' + this.state.madLibName + '&data=' + this.state.madLibName\n                \n                console.log('url for query is: ',url);\n                fetch(url,{method:\"POST\"})\n                        .then(res => res.json())\n                        .then(data => console.log(data));\n        }\n\n\n        submitMadLib = (event) => {\n                event.preventDefault();\n                if(this.state.madLibContent === \"\"){\n                        console.log('No madlib to display!');\n                } else {\n                        var content = this.state.madLibContent;\n                        if(content.substring(0,2) === \"///\"){\n                                content = \"    \" + content;\n                        }\n                        const MadlibArray = content.split(\"///\");\n                        this.setState({showMadLib:true,madLibList:MadlibArray});\n                }\n        };\n\n        renderMadLib(){\n                console.log(this.state.madLibList)\n                const madLibPreview = this.state.madLibList.map((element, index) => {\n                        if((index+2)%2 == 0){\n                                return <h5>{element}</h5>;\n                        } else {\n                                return <h4>{element}</h4>;\n                        }\n                });\n                return madLibPreview;\n        };\n\n        render(){\n        \n                return(\n                        <Layout>\n                                <h1>Create a Mad Lib</h1>\n                                <form action=\"submit\" onSubmit={this.submitMadLib}>\n                                        Name of MadLib:<br/>\n                                        <input type=\"text\" onChange=\n                                                {event => this.setState({madLibName:event.target.value})}/>\n                                                <br/>MadLib Content<br/>\n                                                <textarea cols=\"30\" rows=\"5\" \n                                                        defaultValue=\"Enter your madlib text here please wrap the words to be substituted with three backslashes.\n                                                        So if you wanted the user to choose a weather word you would enter the following:\n                                                        The weather on that day was extremelly ///weather word///...\" \n                                                        onChange=\n                                                                {event => this.setState({madLibContent:event.target.value})}\n                                                                style={{width:\"75%\"}}>\n                                                \n                                                </textarea>\n                                        <br/>\n                                        <button type=\"submit\">Create</button>\n                                        <button onClick={this.saveMadLib}>Save</button>\n                                </form>\n                                {this.state.showMadLib && this.renderMadLib()}\n                        </Layout>        \n                );\n        };\n}\n\nexport default CreateMadLib;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAUA;AAAA;AACA;AAAA;AAKA;;;;AAzEA;AACA;AA2EA;;;;A","sourceRoot":""}